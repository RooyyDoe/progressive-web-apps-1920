{"version":3,"sources":["lazyLoading.js","sort.js","swRegister.js"],"names":["allImages","document","querySelectorAll","console","log","forEach","img","setAttribute","src","removeAttribute","addEventListener","lazyloadImages","window","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","image","target","dataset","classList","remove","unobserve","observe","lazyloadThrottleTimeout","lazyload","clearTimeout","setTimeout","scrollTop","pageYOffset","offsetTop","innerHeight","length","removeEventListener","form","querySelector","dropDown","concat","event","value","submit","navigator","serviceWorker","register","then","reg","err"],"mappings":"aAEA,IAAAA,UAAAC,SAAAC,iBAAA,gBACAC,QAAAC,IAAAJ,WAEAA,UAAAK,QAAA,SAAAC,GACAA,EAAAC,aAAA,WAAAD,EAAAE,KACAF,EAAAG,gBAAA,SAGAR,SAAAS,iBAAA,mBAAA,WACA,IAAAC,EAEA,GAAA,yBAAAC,OAAA,CACAD,EAAAV,SAAAC,iBAAA,SACA,IAAAW,EAAA,IAAAC,qBAAA,SAAAC,EAAAC,GACAD,EAAAV,QAAA,SAAAY,GACA,GAAAA,EAAAC,eAAA,CACA,IAAAC,EAAAF,EAAAG,OACAD,EAAAX,IAAAW,EAAAE,QAAAb,IACAW,EAAAG,UAAAC,OAAA,QACAV,EAAAW,UAAAL,QAKAR,EAAAN,QAAA,SAAAc,GACAN,EAAAY,QAAAN,SAEA,CAAA,IACAO,EAGAC,EAAA,SAAAA,IACAD,GACAE,aAAAF,GAGAA,EAAAG,WAAA,WACA,IAAAC,EAAAlB,OAAAmB,YACApB,EAAAN,QAAA,SAAAC,GACAA,EAAA0B,UAAApB,OAAAqB,YAAAH,IACAxB,EAAAE,IAAAF,EAAAe,QAAAb,IACAF,EAAAgB,UAAAC,OAAA,WAGA,GAAAZ,EAAAuB,SACAjC,SAAAkC,oBAAA,SAAAR,GACAf,OAAAuB,oBAAA,SAAAR,GACAf,OAAAuB,oBAAA,oBAAAR,KAEA,KApBAhB,EAAAV,SAAAC,iBAAA,SAuBAD,SAAAS,iBAAA,SAAAiB,GACAf,OAAAF,iBAAA,SAAAiB,GACAf,OAAAF,iBAAA,oBAAAiB,MCvDA,IAAAS,KAAAnC,SAAAoC,cAAA,QAEAC,SAAArC,SAAAoC,cAAA,eAEAC,SAAA5B,iBAAA,SAAA,WACA0B,KAAA7B,aAAA,SAAA,SAAAgC,OAAAC,MAAApB,OAAAqB,QACAL,KAAAM,WCPA,kBAAAC,WACA/B,OAAAF,iBAAA,OAAA,WACAiC,UAAAC,cAAAC,SAAA,UACAC,KAAA,SAAAC,GAAA,OAAA5C,QAAAC,IAAA,4BAAA2C,KADA,MAEA,SAAAC,GAAA,OAAA7C,QAAAC,IAAA,gCAAA4C","file":"main.min.js","sourcesContent":["// Guide i used: https://imagekit.io/blog/lazy-loading-images-complete-guide/\n\nconst allImages = document.querySelectorAll('.image > img')\nconsole.log(allImages);\n\nallImages.forEach(img => {\n    img.setAttribute('data-src', img.src)\n    img.removeAttribute('src')\n})\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var lazyloadImages;\n\n    if (\"IntersectionObserver\" in window) {\n        lazyloadImages = document.querySelectorAll(\".lazy\");\n        var imageObserver = new IntersectionObserver(function (entries, observer) {\n            entries.forEach(function (entry) {\n                if (entry.isIntersecting) {\n                    var image = entry.target;\n                    image.src = image.dataset.src;\n                    image.classList.remove(\"lazy\");\n                    imageObserver.unobserve(image);\n                }\n            });\n        });\n\n        lazyloadImages.forEach(function (image) {\n            imageObserver.observe(image);\n        });\n    } else {\n        var lazyloadThrottleTimeout;\n        lazyloadImages = document.querySelectorAll(\".lazy\");\n\n        function lazyload() {\n            if (lazyloadThrottleTimeout) {\n                clearTimeout(lazyloadThrottleTimeout);\n            }\n\n            lazyloadThrottleTimeout = setTimeout(function () {\n                var scrollTop = window.pageYOffset;\n                lazyloadImages.forEach(function (img) {\n                    if (img.offsetTop < (window.innerHeight + scrollTop)) {\n                        img.src = img.dataset.src;\n                        img.classList.remove('lazy');\n                    }\n                });\n                if (lazyloadImages.length == 0) {\n                    document.removeEventListener(\"scroll\", lazyload);\n                    window.removeEventListener(\"resize\", lazyload);\n                    window.removeEventListener(\"orientationChange\", lazyload);\n                }\n            }, 20);\n        }\n\n        document.addEventListener(\"scroll\", lazyload);\n        window.addEventListener(\"resize\", lazyload);\n        window.addEventListener(\"orientationChange\", lazyload);\n    }\n})\n","\nconst form = document.querySelector('form')\n\nconst dropDown = document.querySelector('.sort-games')\n\ndropDown.addEventListener('change', () => {\n    form.setAttribute(\"action\", `/sort/${event.target.value}`)\n    form.submit()\n})\n","if ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/sw.js')\n            .then((reg) => console.log('service worker registered', reg))\n            .catch((err) => console.log('service worker nog registered', err))\n    });\n}\n"]}